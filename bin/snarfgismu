#!/usr/bin/perl

use DBI;

use FindBin;
use lib "$FindBin::Bin/../lib";
use db;

my $time = time();

my $lang = 2;

my $userid = 1;  # officialdata

my $typeid = 1;  # gismu

$dbh->begin_work;

open(GISMU,$ARGV[0]);
while(<GISMU>) {
    if(/^([^\d]{5}) (.{12}) (.{21}).{21}(.{96}).{0,11}(.+)$/) {
	my($gismu,$rafsi,$glossword,$definition,$notes) = ($1,$2,$3,$4,$5);
	# Clean out spaces.
	$gismu =~ s/\s+$//;
	$selmaho =~ s/\s+$//;
	$glossword =~ s/\s+$//;
	$definition =~ s/\s+$//;
	$notes =~ s/\s+$//;

	# Turn x1 into LaTex format $x_{1}$.  The HTML output engine
	# should turn that LaTeX pattern into nice HTML.
	$definition =~ s/x(\d)/\$x_{$1}\$/g;

	$notes = undef unless length($notes);

	$gismu =~ s/^\.//g;
	$gismu =~ s/^\s+//g;

	####
	# Protect ' in variables for lookup.
	####
	my $pgismu = $gismu;
	$pgismu =~ s/\'/\'\'/g;
	my $pglossword = $glossword;
	$pglossword =~ s/\'/\'\'/g;

	next if $gismu =~ /\d/;

	## print "GOING!\n";
	## print "$lang, $gismu, $definition, $notes, $userid, $time);\n";

	####
	# Delete old versions
	####

	my $valsiid = $dbh->selectrow_array("SELECT valsiid FROM valsi WHERE word='$pgismu' AND typeid=$typeid\n");
	my $wordid = $dbh->selectrow_array("SELECT wordId FROM natlangwords where langid=$lang AND word='$pglossword'");

	if( $valsiid )
	{
	    $dbh->begin_work;
	    ## print "\nValsi id $valsiid found, deletions beginning.\nPlease ignore any errors about referential integrity.\n\n";
	    $dbh->do("DELETE FROM definitionvotes WHERE valsiid=?", undef, $valsiid);
	    if( $wordid )
	    {
		$dbh->do("DELETE FROM keywordmapping WHERE natlangwordId=?", undef, $wordid );
	    }
            $dbh->do("DELETE FROM natlangwordvotes WHERE definitionid=
		(SELECT definitionid from definitions WHERE langid=? AND valsiid=? AND userid=?)",
		undef,
		$lang, $valsiid, $userid );
	    $dbh->do("DELETE FROM natlangwords WHERE word=? AND langid=?", undef, $glossword, $lang );
	    $dbh->do("DELETE FROM definitions WHERE langid=? AND valsiid=? AND userid=?", undef, $lang, $valsiid, $userid);
	    $dbh->do("DELETE FROM valsi WHERE word=? AND userid=?", undef, $gismu, $userid);
	    $dbh->commit;
	}

	####
	# Enter the basic valsi information.
	####

	$dbh->begin_work;
	
	# Check if valsi is already entered as a cmavo
	my $test_valsiid = $dbh->selectrow_array("SELECT valsiid FROM valsi WHERE word='$pgismu' AND typeid <> $typeid\n");

	# valsi could already be entered as a cmavo
	if( ! $test_valsiid )
	{
	    $dbh->do("INSERT INTO valsi (word, typeid, userid, time) VALUES (?, ?, ?, ?)", { }, $gismu, $typeid, $userid, $time);

	    # Retrieve the ValsiID that got generated above.
	    $valsiid = $dbh->selectrow_array("SELECT last_value FROM valsi_valsiid_seq\n");
	} else {
	    $valsiid = $dbh->selectrow_array("SELECT valsiid FROM valsi WHERE word='$pgismu'\n");
	}
	$dbh->commit;

	## print "pcm: $pgismu";
	## print("SELECT valsiid FROM valsi WHERE word='$pgismu'\n");
	## print "VALSI: $valsiid\n";

	####
	# Enter the definition information.
	####
	$dbh->begin_work;

	# Check if valsi is already entered as a cmavo
	my $test_valsiid = $dbh->selectrow_array("SELECT valsiid FROM valsi WHERE word='$pgismu' AND typeid <> $typeid\n");

	$dbh->do("INSERT INTO definitions (langid, valsiid, definitionNum, definition, notes, userid, time, rafsi) VALUES
	    (?, ?, ?, ?, ?, ?, ?, ?)",
	    undef, $lang, $valsiid, 1, $definition, $notes, $userid, $time, $rafsi);

	# Retrieve the DefinitionID that got generated above.
	$defid = $dbh->selectrow_array("SELECT last_value FROM definitions_definitionid_seq");

	$dbh->commit;

	####
	# Protect ' in variables for lookup.
	####
	my $pdefinition = $definition;
	$pdefinition =~ s/\'/\'\'/g;
	my $pnotes = $notes;
	$pnotes =~ s/\'/\'\'/g;
	## print "$pdefinition, $pnotes\n";

	## print("SELECT definitionId FROM definitions where langid=$lang
	##    AND valsiId=$valsiid AND definitionNum=1" );
	## print "DEFID: $defid\n";

	####
	# Enter the vote information.
	####
	$dbh->begin_work;
        $dbh->do("INSERT INTO definitionvotes (langid, valsiid, definitionId, value, userid, time)
            VALUES
                (?,
		?,
		?,
                ?,
                ?,
                ?)",
                { },
                $lang,
                $valsiid,
		$defid,
                100000,
                $userid,
                $time);
	$dbh->commit;

	####
	# Enter the basic natlang word information for the gloss word.
	####
	$dbh->begin_work;
        $dbh->do("INSERT INTO natlangwords (langid, word, meaningNum, userid, time ) VALUES (?, ?, ?, ?, ?)",
                undef,
		$lang, $glossword, 1, $userid, $time );
	$dbh->commit;

	####
	# Retrieve the WordID that got generated above.
	####
	my $wordid = $dbh->selectrow_array("SELECT last_value FROM natlangwords_wordid_seq");
	## print("SELECT wordId FROM natlangwords where langid=$lang AND word='$pglossword'\n");
	## print "WORDID: $wordid\n";
	## print "$valsiid, $defid, $wordid\n";

	####
	# Enter the vote information.
	####
	$dbh->begin_work;
        $dbh->do("INSERT INTO natlangwordvotes (definitionid, natlangwordid, place, value, userid, time)
            VALUES
                (?,
		?,
		?,
                ?,
                ?,
                ?)",
                undef,
                $defid,
		$wordid,
                0,
                100000,
                $userid,
                $time);
	$dbh->commit;

	####
	# Enter the mapping from the gloss word to the definition.
	####
	$dbh->begin_work;
        $dbh->do("INSERT INTO keywordmapping (definitionId, natlangwordId, place ) VALUES
		(
		?,
		?,
		0
		)",
                undef,
		$defid, $wordid );
	$dbh->commit;

    }
}

$dbh->commit;

$dbh->disconnect;

print "NOTE!  rafsi for cmavo have *not* been entered.  Or, if they
have, they will be overridden by future runs of snarfcmavo.

To fix this, run snarfrafsi gismu.txt.

";
